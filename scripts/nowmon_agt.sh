#!/bin/bash

# This code is written and maintained by Zhenrong WANG
# mailto: zhenrongwang@live.com (*preferred*) | wangzhenrong@hpc-now.com
# The founder of Shanghai HPC-NOW Technologies Co., Ltd (website: https://www.hpc-now.com)
# This code is distributed under the license: GNU Public License - v2.0
# Bug report: info@hpc-now.com

curr_time=$(date "+%Y-%m-%d-%H-%M-%S")
curr_date=`echo $curr_time | awk -F"-" '{print $1"-"$2"-"$3}'`
curr_time_m=`echo $curr_time | awk -F"-" '{print $4":"$5}'`
curr_time_s=`echo $curr_time | awk -F"-" '{print $4":"$5":"$6}'`

hostname=`hostname`
mon_cores=/tmp/mon-cores-$curr_time.dat
mon_all=/tmp/mon-all-$curr_time.dat
mkdir -p /usr/hpc-now >> /dev/null 2>&1
if [ $hostname = 'master' ]; then
    mon_data=/hpc_data/cluster_data/mon_data.csv
else
    mon_data=/hpc_data/cluster_data/mon_data_$hostname.csv
fi

if [ ! -f $mon_data ] && [ $hostname = 'master' ]; then
    echo -e "#---GENERATED BY HPC-NOW CLUSTER SERVICES---#" > $mon_data
    echo -e "date,time_m,time_s,node_name,cpu_tot_cores,mem_tot_gb,mem_used_gb,mem_util_%,stor_app,stor_data,cpu_util,idle_cores,low_cores,mid_low_cores,mid_high_cores,high_cores,full_cores" >> $mon_data
fi

top 1 -bn 1 -i -c -w 512 > $mon_cores
top -bn 1 -i -c > $mon_all

core_num=`lscpu | grep CPU\(s\): | awk '{print $2}' | head -n1`
stor_app=`df -TH | grep /hpc_apps | awk '{print $4}'`
stor_data=`df -TH | grep /hpc_data | awk '{print $4}'`
cpu_util=`cat $mon_all | grep Cpu\(s\) | awk '{print $2}'`
memtot=`cat $mon_all | grep "MiB Mem" | awk '{print $4}'`
memused=`cat $mon_all | grep "MiB Mem" | awk '{print $8}'`
memutil=`echo "scale=4; $memused / $memtot * 100" | bc`

idle_cores=0
low_cores=0
low_flag=25
mid_low_cores=0
mid_flag=50
mid_high_cores=0
high_flag=75
high_cores=0
full_cores=0

for i in $(seq 1 $core_num)
do
    j=$((i-1))
    if [ $((j%2)) -ne 1 ]; then
        cpu_j=`cat $mon_cores | grep Cpu$j | awk '{print $3}'`
    else
        cpu_j=`cat $mon_cores | grep Cpu$j | awk -F"C" '{print $3}' | awk '{print $3}'`
    fi
    if [ $cpu_j = 0.0 ]; then
        ((idle_cores++))
    elif [ $cpu_j = 100.0 ]; then
        ((full_cores++))
    else
        if [ `expr $cpu_j \< $low_flag` -eq 0 ]; then
            ((low_cores++))
        elif [ `expr $cpu_j \< $mid_flag` -eq 0 ]; then
            ((mid_low_cores++))
        elif [ `expr $cpu_j \< $high_flag` -eq 0 ]; then
            ((mid_high_cores++))
        else
            ((high_cores++))
         fi
    fi
done
if [ $hostname = 'master' ]; then
    echo -e "$curr_date,$curr_time_m,$curr_time_s,$hostname,$core_num,$memtot,$memused,$memutil,$stor_app,$stor_data,$cpu_util,$idle_cores,$low_cores,$mid_low_cores,$mid_high_cores,$high_cores,$full_cores" >> $mon_data
else
    echo -e "$curr_date,$curr_time_m,$curr_time_s,$hostname,$core_num,$memtot,$memused,$memutil,$stor_app,$stor_data,$cpu_util,$idle_cores,$low_cores,$mid_low_cores,$mid_high_cores,$high_cores,$full_cores" > $mon_data
fi
rm -rf $mon_cores
rm -rf $mon_all
