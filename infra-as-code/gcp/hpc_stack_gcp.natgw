/*
 * Copyright (C) 2022-present Shanghai HPC-NOW Technologies Co., Ltd.
 * This code is distributed under the license: MIT License
 * Originally written by Zhenrong WANG
 * mailto: zhenrongwang@live.com | wangzhenrong@hpc-now.com
 */

resource "google_compute_instance" "natgw" {
  name = "natgw-RANDOM_STRING"
  machine_type = "${var.e2c2g}"
  allow_stopping_for_update = true
  desired_status = "RUNNING"
  can_ip_forward = true
  tags = ["natgw"]

  boot_disk {
    initialize_params {
      image = data.google_compute_image.centos7.self_link
      size = 30
    }
  }

  network_interface {
    subnetwork = google_compute_subnetwork.hpc_stack_pub_subnet.self_link
    access_config {
    }
  }

  metadata_startup_script = <<EOF
#!/bin/bash
hostnamectl set-hostname natgw
yum -y install iptables-services
systemctl restart firewalld
systemctl enable firewalld
private_ip=`ifconfig | grep inet | head -n1 | awk '{print $2}'`
cat /etc/sysctl.conf | grep net.ipv4.ip_forward
if [ $? -ne 0 ]; then
  echo net.ipv4.ip_forward=1 >> /etc/sysctl.conf
else
  sed -i '/net.ipv4.ip_forward/d' /etc/sysctl.conf
  echo net.ipv4.ip_forward=1 >> /etc/sysctl.conf
fi
sysctl -p /etc/sysctl.conf
iptables -t nat -A POSTROUTING -o eth0 -s 10.0.0.0/18 -j SNAT --to $private_ip
service iptables save
systemctl restart iptables
systemctl enable iptables
EOF
}

resource "google_compute_route" "route_to_natgw" {
  name = "natgw-RANDOM_STRING"
  dest_range  = "0.0.0.0/0"
  network = google_compute_network.hpc_stack.name
  next_hop_instance = google_compute_instance.natgw.self_link
  priority = 100
  tags = ["database","compute"]
}